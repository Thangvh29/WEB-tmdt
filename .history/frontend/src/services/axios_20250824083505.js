// src/services/axios.js
import axios from "axios";

const instance = axios.create({
  baseURL: "http://localhost:5000/api",
});

// Request interceptor - g·∫Øn token v√†o header
instance.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    console.log("üîê Axios request interceptor - token t·ª´ localStorage:", token);
    
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
      console.log("‚úÖ Axios request - ƒë√£ g·∫Øn Authorization header:", config.headers.Authorization);
    } else {
      console.log("‚ùå Axios request - kh√¥ng c√≥ token trong localStorage");
    }
    
    return config;
  },
  (error) => {
    console.error("‚ùå Axios request interceptor error:", error);
    return Promise.reject(error);
  }
);

// Response interceptor - x·ª≠ l√Ω l·ªói authentication
instance.interceptors.response.use(
  (response) => {
    return response;
  },
  (error) => {
    console.error("‚ùå Axios response error:", error);
    
    // N·∫øu l·ªói 401 (Unauthorized) th√¨ x√≥a token v√† redirect v·ªÅ login
    if (error.response?.status === 401) {
      console.log("üîÑ Token h·∫øt h·∫°n ho·∫∑c kh√¥ng h·ª£p l·ªá, ƒëang x√≥a token...");
      localStorage.removeItem("token");
      
      // Redirect v·ªÅ login page n·∫øu kh√¥ng ph·∫£i ƒëang ·ªü trang login
      if (!window.location.pathname.includes('/login')) {
        window.location.href = '/login';
      }
    }
    
    return Promise.reject(error);
  }
);

export default instance;